name: Build and Test  

on:  
  push:  
    branches: [develop]  
  pull_request:  
    branches: [develop]  
  workflow_dispatch:  

jobs:  
  build_and_test:  
    name: Build and Test  
    runs-on: ubuntu-latest  

    strategy:  
      matrix:  
        dotnet-version: ["7.0.x"]  

    steps:  
    - name: Checkout code  
      uses: actions/checkout@v2  

    - name: Setup .NET SDK  
      uses: actions/setup-dotnet@v1  
      with:  
        dotnet-version: ${{ matrix.dotnet-version }}  

    - name: Restore dependencies  
      run: dotnet restore  

    - name: Build  
      run: dotnet build --configuration Release --no-restore  

    - name: Test
      run: dotnet test ./tests/QueryVortex.Tests/QueryVortex.Tests.csproj --verbosity normal


    - name: Install ReportGenerator tool
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Create Coverage Report
      run: |
        dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        reportgenerator "-reports:**/coverage.opencover.xml" "-targetdir:coverage" -reporttypes:"Cobertura"
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage/Cobertura.xml
        fail_ci_if_error: true

    - name: Cache NuGet packages  
      uses: actions/cache@v2  
      with:  
        path: ~/.nuget/packages  
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}  
        restore-keys: |
          ${{ runner.os }}-nuget
